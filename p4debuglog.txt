GNU bash, version 4.4.20(1)-release (x86_64-pc-linux-gnu)
b main
Breakpoint 1 at 0x8fd: file p4final.c, line 49.
(gdb) r
Starting program: /home/runner/IA2-Test1-Session2/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p4final.c:49
49  {
(gdb) n
50    int n = input_size();
(gdb) s
input_size () at p4final.c:4
4   {
(gdb) n
6     printf("Enter array size: ");
(gdb) n
7     scanf("%d", &n);
(gdb) n
Enter array size: 3
8     return n;
(gdb) p n
$1 = 3
(gdb) n
9   }
(gdb) n
main () at p4final.c:51
51    int data[n];
(gdb) n
52    input_array(n, data);
(gdb) s
input_array (n=3, a=0x7ffd6da96ea0) at p4final.c:13
13    printf("Enter all values of the array:\n");
(gdb) n
Enter all values of the array:
14    for (int i = 0; i < n; i++)
(gdb) n
16     scanf("%d", &a[i]);
(gdb) n
2 1 7   
14   for (int i = 0; i < n; i++)
(gdb) n
16     scanf("%d", &a[i]);
(gdb) n
14   for (int i = 0; i < n; i++)
(gdb) n
16     scanf("%d", &a[i]);
(gdb) n
14   for (int i = 0; i < n; i++)
(gdb) n
18
(gdb) n
main () at p4final.c:53
53   int r = sum_composite_numbers(n, data);
(gdb) s
sum_composite_numbers (n=3, a=0x7ffd6da96ea0) at p4final.c:32
32   int s = 0;
(gdb) n
33   for (int i = 0; i < n; i++)
(gdb) n
35     if (is_composite(a[i]))
(gdb) n
33   for (int i = 0; i < n; i++)
(gdb) n
35     if (is_composite(a[i]))
(gdb) n
33   for (int i = 0; i < n; i++)
(gdb) n
35     if (is_composite(a[i]))
(gdb) n
33   for (int i = 0; i < n; i++)
(gdb) n
40   return s;
(gdb) p s
$2 = 0
(gdb) n
41
(gdb) n
main () at p4final.c:54
54   output(r);
(gdb) s
output (s=0) at p4final.c:45
45   printf("Sum of the given array is: %d", s);
(gdb) n
46
(gdb) n
main () at p4final.c:55
55   return 0;
(gdb) c
Continuing.
Sum of the given array is: 0[Inferior 1 (process 767) exited normally]
(gdb) 